name: "Godot 4.1.2 CI/CD"

env:
  GODOT_VERSION: 4.1.2

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build-web:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    container:
      image: barichello/godot-ci:4.1.2
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Move HTML5 templates into position
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Create staging directory
        run: mkdir -v -p build/web

      - name: Build
        run: godot -v --export-release --headless "Web"
  deploy-web:
    runs-on: ubuntu-latest
    needs: build-web
    permissions:
      contents: write
    container:
      image: barichello/godot-ci:4.1.2
    steps:
      - name: Add coi-service-worker
        run: |
          git clone https://github.com/gzuidhof/coi-serviceworker.git
          mv coi-serviceworker/coi-serviceworker.js build/web/coi-serviceworker.js
          sed -i '3 i <script src="coi-serviceworker.js"></script>' build/web/index.html

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3.9.3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build/web
          force_orphan: true
          user_name: "github-ci[bot]"
          user_email: "github-actions[bot]@users.noreply.github.com"
          commit_message: "UPDATE GITHUB PAGES"
  
  build_linux:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    container:
      image: barichello/godot-ci:4.1.2

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Move HTML5 templates into position
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Create staging directory
        run: mkdir -v -p build/linux

      - name: Build for Linux
        run: godot -v --export "Linux/X11" --path . --output "build/linux/game.x86_64"
  zip_linux:
    needs: build_linux
    runs-on: ubuntu-latest
    steps:
      - name: Zip Linux artifacts
        run: cd build/linux && zip -r game_linux.zip game.x86_64
  upload_linux:
    needs: zip_linux
    runs-on: ubuntu-latest

    steps:
      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v2
        with:
          name: game_linux
          path: build/linux/game_linux.zip